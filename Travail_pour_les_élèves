PROGRAMMATION ORIENTEE OBJET
Nous allons créer des classes d’objet puis des fonctions qui sont adaptées à ces objets. Un objet est une donnée. Créons ensemble un annuaire des amis et des proches. Quelles données sont importantes ? Nom, prénom, téléphone, email et une note : ami, collègue, famille, voisin… et un identifiant ?
On définira une classe Annuaire : le nom commence par une majuscule, pas d’espace mais un tiret du 8_ c’est la CamelCase
1°) On crée l’objet : def __init__(self,data) :
Self.data=data 
Self est l’objet et data est une donnée, un attribut
Crée l’objet de la classe Annuaire 
2°) On crée ensuite des méthodes qui s’appliquent à ces objets :
Une des principales est l’affichage d’un attribut. 
Def affiche_data(self) :
	Print(‘texte{}’.format(self.data))
Self est un objet qui a des attributs. Cette fonction retourne celui qui est demandé.
Ecrire une méthode qui affiche le numéro de téléphone et l’identifiant de la personne.
Essayer avec N1 : Pierre, Le pompier, 18, ami 
		N2 : Johanna, La médecin, 15, collègue
		N3 : André, Le policier, 17, voisin

3°) Créer une liste qui contient toutes ces informations puis une fonction qui produit les mêmes résultats que dans le 2°)
